# Generated by Django 3.2.2 on 2021-05-09 16:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('name', models.CharField(help_text='Name of our registered user.', max_length=100, verbose_name='full name')),
                ('phone', models.CharField(help_text='Phone number of our registered user.', max_length=20, primary_key=True, serialize=False, verbose_name='phone number')),
                ('email', models.CharField(blank=True, help_text='Email ID of our registered user. ( Optional )', max_length=100, null=True, verbose_name='email id')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='GlobalDatabase',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name of the person.', max_length=100, verbose_name='full name')),
                ('phone', models.CharField(help_text='Phone number of the person.', max_length=20, verbose_name='phone number')),
                ('email', models.CharField(blank=True, help_text='Email ID of our registered user. ( Optional )', max_length=100, null=True, verbose_name='email id')),
                ('spam_status', models.BooleanField(default=False, help_text='True means person is spammer, Default False.')),
                ('registration_status', models.BooleanField(default=False, help_text='True means person is a registered user. Default False.')),
                ('user', models.ForeignKey(blank=True, help_text='Tells the particular user is linked to which registered USER -> whose CONTACT is this person.', null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
